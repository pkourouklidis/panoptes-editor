FeatureStore{
	features
	    wait_duration:continuous,
		service_duration:continuous
	labels 
	    is_happy:categorical
}

Model callcenter-linear{
    uses "wait_duration", "service_duration"
    outputs "p1"
    predicts is_happy
}

BaseAlgorithmRuntime pythonFunction

BaseAlgorithm kstest{
	codebase "https://gitlab.agile.nat.bt.com/BETALAB/research/panoptes/example-algorithm-repo"
	runtime pythonFunction
	severity levels 2
	accepts only continuous
	parameters pValue:Boolean
}

Action emailAction{
	parameters mandatory email:String
}

Action retrainAction{
    parameters
        mandatory ioNames:String,
        mandatory containerImage:String
}

Deployment callcenter{
	model callcenter-linear
	
	BaseAlgorithmExecution exec1{
		algorithm kstest
		live data wait_duration
		historical data wait_duration
		actions 1->emailMe
		parameter values pValue = true
	}
	
	ActionExecution emailMe{
		action emailAction
		parameter values email=panagiotis.kourouklidis@bt.com
	}
	
	ActionExecution retrainCallcenterLinear{
	    action retrainAction
	    parameter values ioNames="wait_duration,service_duration,is_happy",  
	        containerImage="registry.docker.nat.bt.com/panoptes/callcenter-model-training:latest"
	}
	
	Trigger t1{
	every
	5 samples
	or
	every
	one day
	execute exec1
	}
}