/*
 * generated by Xtext 2.25.0
 */
package org.lowcomote.panoptes.web;

import com.google.inject.Injector;

import panoptesDSL.PanoptesDSLPackage;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;

import org.eclipse.emf.ecore.EPackage;
import org.eclipse.xtext.util.DisposableRegistry;
import org.eclipse.xtext.web.server.InvalidRequestException;
import org.eclipse.xtext.web.server.XtextServiceDispatcher;
import org.eclipse.xtext.web.server.persistence.IResourceBaseProvider;
import org.eclipse.xtext.web.server.persistence.ResourceBaseProviderImpl;
import org.eclipse.xtext.web.servlet.HttpServiceContext;
import org.eclipse.xtext.web.servlet.XtextServlet;

/**
 * Deploy this class into a servlet container to enable DSL-specific services.
 */
@WebServlet(name = "XtextServices", urlPatterns = "/xtext-service/*")
public class PanoptesXServlet extends XtextServlet {
	
	private static final long serialVersionUID = 1L;
	
	DisposableRegistry disposableRegistry;
	
	public void init() throws ServletException {
		super.init();
		EPackage.Registry.INSTANCE.put(PanoptesDSLPackage.eNS_URI, PanoptesDSLPackage.eINSTANCE);
		IResourceBaseProvider resourceBaseProvider = new ResourceBaseProviderImpl("./resources");
		Injector injector = new PanoptesXWebSetup(resourceBaseProvider).createInjectorAndDoEMFRegistration();
		this.disposableRegistry = injector.getInstance(DisposableRegistry.class);
	}
	
	public void destroy() {
		if (disposableRegistry != null) {
			disposableRegistry.dispose();
			disposableRegistry = null;
		}
		super.destroy();
	}
	
	@Override
	protected XtextServiceDispatcher.ServiceDescriptor getService(HttpServletRequest request)
			throws InvalidRequestException {
		HttpServiceContext serviceContext = new HttpServiceContext(request);
		Injector injector = getInjector(serviceContext);
		XtextServiceDispatcher serviceDispatcher = injector.getInstance(PanoptesDispatcher.class);
		XtextServiceDispatcher.ServiceDescriptor service = serviceDispatcher.getService(serviceContext);
		return service;
	}
	
}
